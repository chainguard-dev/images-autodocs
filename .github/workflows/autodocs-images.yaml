name: Build Chainguard Images Reference Docs

on:
  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:

env:
  AUTODOCS_SOURCES: "${{ github.workspace }}/images/images"
  AUTODOCS_OUTPUT: "${{ github.workspace }}/reference"
  AUTODOCS_CACHE: "${{ github.workspace }}/cache"
  AUTODOCS_CHANGELOG: "${{ github.workspace }}/reference"
  AUTODOCS_CHANGELOG_OUTPUT: "${{ github.workspace }}/changelog.md"
  AUTODOCS_CHANGELOG_FILE: "${{ github.workspace }}/edu/autodocs/changelog.md"
  AUTODOCS_IGNORE_IMAGES: "alpine-base:k3s-images:k3s-embedded:source-controller:sdk:spire:musl-dynamic:nri-kube-events:nri-kubernetes:nri-prometheus:gcc-musl"
jobs:
  main:
    permissions:
      id-token: write # Enable OIDC
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      ############################################################################################
      # Set up Build Environment
      ############################################################################################
      - name: Set up workdir
        run: |
          mkdir -m 777 -p "${{ env.AUTODOCS_OUTPUT }}" "${{ env.AUTODOCS_CACHE }}"

      - name: Checkout Destination Repo
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          repository: chainguard-dev/edu
          path: edu

      - name: Checkout Images Monorepo
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          repository: chainguard-images/images
          path: images

      - name: Set up gitsign
        uses: chainguard-dev/actions/setup-gitsign@main

      - name: Set up Chainctl
        uses: chainguard-dev/actions/setup-chainctl@main
        with:
          identity: "${{ secrets.CHAINCTL_IDENTITY }}"

      - name: Set up Crane
        uses: imjasonh/setup-crane@v0.1

      - name: Set up Cosign
        uses: sigstore/cosign-installer@v3.1.1

      ############################################################################################
      # Set up Changelog
      ############################################################################################
      - name: Copy current changelog file to workdir
        run: |
          cp "${{ env.AUTODOCS_CHANGELOG_FILE }}" "${{ env.AUTODOCS_CHANGELOG_OUTPUT }}" && \
          chmod 777 "${{ env.AUTODOCS_CHANGELOG_OUTPUT }}"

      - name: Copy current reference docs to workdir (required for changelog)
        run: |
          cp -R "${{ github.workspace }}/edu/content/chainguard/chainguard-images/reference" "${{ github.workspace }}" && \
          chmod -R 777 "${{ github.workspace }}/reference"
          
      ############################################################################################
      # Fetch Image Metadata
      ############################################################################################
      - name: Fetch images list
        run: |
          chainctl img ls --group "${{ secrets.CHAINCTL_GROUP_PUBLIC }}" -ojson > "${{ env.AUTODOCS_CACHE }}/images-tags.json"

      - name: Fetch images metadata
        run: |
          echo "Fetching variants config...";
          for image in $(jq -r '.[].repo.name' ${{ env.AUTODOCS_CACHE }}/images-tags.json); do
            echo "\n###########################################################################\n"
            echo "Fetching latest tags info for ${image} image"
            echo "\n###########################################################################\n"
            for tags in $(jq --arg image_repo $image -r 'map(select(.repo.name == $image_repo)) | [.[].tags[].name] | map(select(startswith("latest"))) | .[]' ${{ env.AUTODOCS_CACHE }}/images-tags.json); do
              for tag in $tags; do
                cosign verify-attestation $(crane digest --full-ref --platform=linux/amd64 cgr.dev/chainguard/${image}:${tag}) \
                  --certificate-identity="https://github.com/chainguard-images/images/.github/workflows/release.yaml@refs/heads/main" \
                  --certificate-oidc-issuer="https://token.actions.githubusercontent.com" --type="https://apko.dev/image-configuration" \
                  2>/dev/null | jq -rs '.[0].payload' | base64 -d > ${{ env.AUTODOCS_CACHE }}/${image}.${tag}.json
              done
            done
          done

      ############################################################################################
      # Generate Docs
      ############################################################################################
      - name: Update the reference docs for Chainguard Images
        uses: chainguard-dev/images-autodocs@1.1.3
        with:
          command: build images

      ############################################################################################
      # Copy Updated Docs
      ############################################################################################
      - name: "Copy updates to main repo"
        run: |
          echo "Copying files..." && \
          cp -R "${{ env.AUTODOCS_OUTPUT }}" "${{ github.workspace }}/edu/content/chainguard/chainguard-images" && \
          echo "Finished copy"

      - name: "Get latest changelog"
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "CHANGELOG<<$EOF" >> $GITHUB_ENV
          echo "`cat "${{ env.AUTODOCS_CHANGELOG_OUTPUT }}" | sed '1,/#/!d' | sed -n '/#/!p'`" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      - name: "Copy updated changelog to autodocs folder"
        run: |
          mv "${{ env.AUTODOCS_CHANGELOG_OUTPUT }}" "${{ env.AUTODOCS_CHANGELOG_FILE }}"

      ############################################################################################
      # Send Pull Request
      ############################################################################################
      - name: Create a PR
        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04 # v4.2.3
        id: cpr
        with:
          token: "${{ secrets.PAT }}"
          path: "${{ github.workspace }}/edu"
          commit-message: Update Images Reference
          title: "[AutoDocs] Update Images Reference Docs"
          body: "${{ env.CHANGELOG }}"
          signoff: true
          labels: |
            documentation
            images
            automated
          assignees: erikaheidi

      ############################################################################################
      # Notify Slack
      ############################################################################################
      - name: "Send notification to Slack"
        if: ${{ steps.cpr.outputs.pull-request-number }}
        uses: chainguard-dev/images-autodocs@1.1.3
        with:
          command: notify pullrequest
        env:
          AUTODOCS_SLACK_PRIMARY: ${{ secrets.AUTODOCS_SLACK_PRIMARY }}
          AUTODOCS_SLACK_SECONDARY: ${{ secrets.AUTODOCS_SLACK_SECONDARY }}
          AUTODOCS_SLACK_GENERAL: ${{ secrets.AUTODOCS_SLACK_GENERAL }}
          PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
          PR_ACTION: ${{ steps.cpr.outputs.pull-request-operation }}
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
          PR_SHA: ${{ steps.cpr.outputs.pull-request-head-sha }}
